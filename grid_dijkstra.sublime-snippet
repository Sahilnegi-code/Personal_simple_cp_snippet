<snippet>
	<content><![CDATA[
ll grid_dijkstra()
{
	  vector<vector<int>> visi(r,vector<int>(c,0));
	  priority_queue<vector<ll>> pq;
	  pq.push({0,si,sj});
      vector<vector<ll>> dis(r,vector<ll>(c,MAX));
      dis[si][sj]=0;
      mat[si][sj]='0';
      mat[dx][dy]='0';
	  while(!pq.empty())
	  { 
           vector<ll> cur=pq.top(); pq.pop();

           ll w=-cur[0];
           int i=cur[1];
           int j=cur[2];
           if(visi[i][j]) continue;
           visi[i][j]=1;
           for(int k=0;k<4;k++)
           {
           	  int ix=i+ii[k];
           	  int iy=j+jj[k];

           	  if(ix>=0 && ix<r && iy>=0 && iy<c && !visi[ix][iy] && mat[ix][iy]!='X' && dis[ix][iy]>(mat[ix][iy]-'0')+dis[i][j])
           	  {
                     dis[ix][iy]=mat[ix][iy]-'0'+dis[i][j];
                     pq.push({-dis[ix][iy],ix,iy});
           	  }
           }
	  }
	  // for(int i=0;i<r;i++){
	  // 	for(int j=0;j<c;j++)
	  // 		cout<<dis[i][j]<<" ";
	  // 	cout<<endl;}

      return dis[dx][dy];

}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>griddijkstra</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
