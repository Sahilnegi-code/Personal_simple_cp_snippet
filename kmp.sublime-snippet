<snippet>
	<content><![CDATA[
void LPS(vector<ll> &lps,string pattern){

	   int n=pattern.size();
	   lps.resize(n,0);
	   ll current_ix=1;
	   ll left_with_len=0;
	   while(current_ix<n){
	   	  if(pattern[current_ix]==pattern[left_with_len]){
	   	  	 lps[current_ix++]=++left_with_len;
	   	  }
	   	  else if(left_with_len)
	   	  	 left_with_len=lps[left_with_len-1];
	   	  else
	   	  	 lps[current_ix++]=0;
	   }

}
bool KMP(string s,string p){
		vector<ll> lps;
		LPS(lps,p);
		for(int i=0;i<p.size();i++)
			cout<<lps[i]<<" ";
		cout<<endl;
		int i=0,j=0;
		vector<int> res;
		while(i<s.size()){
			 while(i<s.size() && j<p.size() && s[i]==p[j]){
			 	i++;j++;
			 }
			 if(j==p.size()){
			 	res.push_back(i-p.size());
			 	j=lps[j-1];
			 }
			 else {
			 	if(j)
			 	j=lps[j-1];
			    else
			    i++;


			 }
		}
		if(res.empty())
			return false;
		return true;

}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>kmp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
